pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'adriandez/cypress-automation:latest'
        CONFIGMAP_PATH = 'build/k8s/cypress-configmap.yaml'
        JOB_PATH = 'build/k8s/cypress-job.yaml'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[
                        credentialsId: 'win-adri-id',
                        url: 'https://github.com/adriandez/cypress-automation.git'
                    ]]
                ])
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build --no-cache -t ${DOCKER_IMAGE} -f build/Dockerfile ."
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    def dockerImage = "adriandez/cypress-automation:latest"

                    withDockerRegistry([credentialsId: 'dockerhub-credentials', url: 'https://index.docker.io/v1/']) {
                        bat "docker push ${dockerImage}"
                    }
                }
            }
        }

        tage('Deploy to Kubernetes') {
            steps {
                script {
                    // Assuming you have your kubeconfig stored as a Jenkins credential
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        bat "kubectl apply -f ${CONFIGMAP_PATH} --kubeconfig=%KUBECONFIG%"
                        bat "kubectl apply -f ${JOB_PATH} --kubeconfig=%KUBECONFIG%"
                    }
                }
            }
        }
    
    post {
        success {
            echo 'Pipeline completed successfully'
        }
        failure {
            echo 'Pipeline failed'
        }
    }
}
